public class Solution {
    public List<String> readBinaryWatch(int num) {
        List<String> list = new ArrayList<>();
        int[] num1 = {8,4,2,1};
        int[] num2 = {32,16,8,4,2,1};
        for(int i = 0 ; i <= num ; i++){
            List<Integer> l1 = helper1(num1,i);
            List<Integer> l2 = helper1(num2,num-i);
            for(int a : l1){
                if(a>=12)continue;
                for(int b : l2){
                    if(b>=60)continue;
                    list.add(a+":"+(b<10?"0"+b:b+""));
                }
            }
        }
        return list;
    }
    
     public List<Integer> helper1(int[] num,int count){
         List<Integer> res = new ArrayList<>();
         helper2(res,num,count,0,0);
         return res;
     }
    
    public void helper2(List<Integer> res,int[] num,int count,int pos,int sum){
        if(count==0){
            res.add(sum);
            return;
        }
        for(int i = pos; i<num.length;i++){
            helper2(res,num,count-1,i+1,sum+num[i]);
        }
    }
}

_______________________________________________________________________________________
public class Solution {
    public List<String> readBinaryWatch(int num) {
        List<String> list = new ArrayList<>();
        for(int i = 0; i < 12; i++){
            for(int j = 0; j < 60; j++){
                if(Integer.bitCount(i) + Integer.bitCount(j) == num){
                    list.add(String.format("%d:%02d", i, j));
                }
            }
        }
        return list;
    }
}
