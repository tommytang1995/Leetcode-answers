

public class Solution {
    public List<Integer> findClosestElements(List<Integer> arr, int k, int x) {
        Collections.sort(arr, (a, b) -> a == b ? a - b : Math.abs(a - x) - Math.abs(b - x));
        arr = arr.subList(0, k);
        Collections.sort(arr);
        return arr;
    }
}


public class Solution {
    public List<Integer> findClosestElements(List<Integer> arr, int k, int x) {
        List<Integer> res = new ArrayList<>();
        int index = searchInsert(arr, x);
        int i = index - 1;
        int j = index;
        while(k-- > 0) {
            if(i < 0 || (j < arr.size() && Math.abs(arr.get(j) - x) < Math.abs(arr.get(i) - x))) {
                j++;
            }
            else{
                i--;
            }
        }
        return arr.subList(i + 1, j);
    }
    
     public int searchInsert(List<Integer> nums, int target) {
        int left = 0;
        int right = nums.size() - 1;
        while(left <= right){
            int mid = left + (right - left) / 2;
            if(nums.get(mid) < target){
                left = mid + 1;
            }
            else{
                right = mid - 1;
            }
        }
        return left;
    }
}
