class Solution {
    public int findPaths(int m, int n, int N, int i0, int j0) {
        long[][][] dp = new long[2][m][n];
        long base = 1000000007;
        for(int k = 1; k <= N; k++) {
            for(int i = 0; i < m; i++) {
                for(int j = 0; j < n; j++) {
                     dp[k % 2][i][j] =((i == 0     ? 1 : dp[(k - 1) % 2][i - 1][j])
                                    + (i == m - 1 ? 1 : dp[(k - 1) % 2][i + 1][j])
                                    + (j == 0     ? 1 : dp[(k - 1) % 2][i][j - 1])
                                    + (j == n - 1 ? 1 : dp[(k - 1) % 2][i][j + 1])) % base;

                }
            }
        }
        return (int)dp[N % 2][i0][j0];
    }
}
