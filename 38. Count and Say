因为是层层递进的关系，所以肯定要两个StringBruilder来存上一个和现在的，下一轮将现在的赋给上一个，然后现在的成为一个新的空的StringBuilder。
关系到符号的具体数值和个数，所以需要两个变量来分别存储。
public class Solution {
    public String countAndSay(int n) {
        StringBuilder res = new StringBuilder();
        String pre = "1";
        for(int i = 1; i < n; i++){
            int count = 1;
            char say = pre.charAt(0);
            res = new StringBuilder();
            for(int j = 1; j < pre.length(); j++){
                if(pre.charAt(j) != say){
                    res.append(count);
                    res.append(say);
                    say = pre.charAt(j);
                    count = 1;
                }
                else{
                    count++;
                }
            }
            res.append(count);  //这是为了存第j-1个元素，因为当count=1, say=pre.charAt(j-1)之后，j=length，不会执行下面的代码，若
            res.append(say);    //没有这两行，第j-1个元素会被直接无视。
            pre = res.toString();
        }
        return pre;
    }
}
Time: o(n^n)
Space: o(n)
