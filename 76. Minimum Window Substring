class Solution {
    public String minWindow(String s, String t) {
        if(s.length() < t.length()) {
            return "";
        }
        else if(s.length() == t.length()) {
            if(s.equals(t)) {
                return s;
            }
        }
        int left = 0;
        int right = 0;
        int[] letters = new int[128];
        for(int i = 0; i < t.length(); i++) {
            letters[t.charAt(i) - 'A']++;
        }
        int minStart = 0;
        int minEnd = Integer.MAX_VALUE;
        int count = t.length();
        while(right < s.length()) {
            if(letters[s.charAt(right) - 'A'] > 0) {
                count--;
            }
            letters[s.charAt(right) - 'A']--;
            right++;
            while(count == 0 && left < right) {
                if(right - left < minEnd - minStart) {
                    minStart = left;
                    minEnd = right;
                }
                if(letters[s.charAt(left) - 'A'] >= 0) {
                    count++;
                }
                letters[s.charAt(left) - 'A']++;
                left++;
            }
        }
        return minEnd == Integer.MAX_VALUE ? "" : s.substring(minStart, minEnd);
    }
}
