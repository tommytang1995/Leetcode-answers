public class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs == null || strs.length == 0) return "";
        Arrays.sort(strs);
        String first = strs[0];
        String last = strs[strs.length-1];
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < Math.min(first.length(), last.length()); i++){
            if(first.charAt(i) == last.charAt(i)) sb.append(first.charAt(i));
            else break;
        }
        return sb.toString();
    }
}
Time: o(n+mlogm)
Space: o(n)

public class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs == null || strs.length == 0) return "";
        String res = strs[0];
        for(int i = 1; i < strs.length; i++){
            while(strs[i].indexOf(res) != 0){
                res = res.substring(0, res.length()-1);
            }
        }
        return res;
    }
}
Time: o(m*n^2)
Space: o(1)
