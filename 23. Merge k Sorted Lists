/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists == null || lists.length == 0) return null;
        ListNode dummy = new ListNode(0);
        ListNode cur = dummy;
        PriorityQueue<ListNode> pq = new PriorityQueue<>(
            new Comparator<ListNode>(){
                 @Override
                 public int compare(ListNode l1, ListNode l2){
                     return l1.val - l2.val;
                 }
            }
        );
        for(int i = 0; i < lists.length; i++){
            if(lists[i] != null)pq.offer(lists[i]);  //注意if的条件！！！！！
        }
        while(!pq.isEmpty()){
            cur.next = pq.peek();
            cur = cur.next;  //不要忘记这个！！！
            ListNode temp = pq.poll();
            if(temp.next != null)pq.offer(temp.next);  //注意if的条件！！！！！
        }
        return dummy.next;
    }
}
Time: o(nlogk)
Space: o(n+k)
