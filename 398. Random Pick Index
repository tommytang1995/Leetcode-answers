public class Solution {

    Map<Integer, List<Integer>> map;
    Random random;
    public Solution(int[] nums) {
        map = new HashMap<>();
        random = new Random();
        for(int i = 0; i < nums.length; i++){
            if(!map.containsKey(nums[i])){
                map.put(nums[i], new ArrayList<>());
            }
            map.get(nums[i]).add(i);
        }
    }
    
    public int pick(int target) {
        List<Integer> list = map.get(target);
        int res = -1;
        for(int i = 0; i < list.size(); i++){
            if(random.nextInt(i + 1) == 0) res = list.get(i); 
        }
        return res;
    }
}

public class Solution {

    int[] nums;
    Random random;
    public Solution(int[] nums) {
        this.nums = nums;
        random = new Random();
    }
    
    public int pick(int target) {
        int count = 0;
        int res = -1;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] == target){
                if(random.nextInt(++count) == 0) res = i;
            }
        }
        return res;
    }
}
