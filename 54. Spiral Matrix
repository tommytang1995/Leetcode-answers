 public class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> list = new ArrayList<>();
        if(matrix==null||matrix.length==0||matrix[0].length==0)return list;
        int m = matrix.length;
        int n = matrix[0].length;
        int rowStart = 0;
        int rowEnd = m-1;
        int colStart = 0;
        int colEnd = n-1;
        
        while(rowStart<=rowEnd && colStart<=colEnd){
            for(int i = colStart; i <= colEnd; i++){
                list.add(matrix[rowStart][i]);
            }
            rowStart++;
            for(int i = rowStart; i <= rowEnd; i++){
                list.add(matrix[i][colEnd]);
            }
            colEnd--;
            if(rowStart>rowEnd || colStart>colEnd)break;   //avoid duplicates!!!!!remember!!!!! For example, [[2,3]] -> [2,3,2]
            for(int i = colEnd; i >= colStart; i--){
                list.add(matrix[rowEnd][i]);
            }
            rowEnd--;
            for(int i = rowEnd; i >= rowStart; i--){
                list.add(matrix[i][colStart]);
            }
            colStart++;
        }
        return list;
    }
}
Time: o(m*n)
Space: o(1)
