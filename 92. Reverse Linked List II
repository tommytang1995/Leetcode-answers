/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(head == null || head.next == null) return head;
        if(m == n) return head;
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode pre = dummy;
        ListNode cur = head;
        int pos = 1;
        while(pos < m){
            pre = cur;
            cur = cur.next;
            pos++;
        }
        ListNode start = cur;
        ListNode end = cur.next;
        while(pos < n){
            start.next = end.next;
            end.next = pre.next;
            pre.next = end;
            end = start.next;
            pos++;
        }
        return dummy.next;
    }
}
Time: o(n)
Space: o(1)
