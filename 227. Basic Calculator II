public class Solution {
    public int calculate(String s) {
        if(s == null || s.length() == 0) return 0;
        char sign = '+';  //保存上一个符号
        int res = 0;
        int num = 0;
        Stack<Integer> stack = new Stack<>();
        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);
            if(Character.isDigit(ch)){
                num = 10 * num + (ch - '0');
            }
            if(!Character.isDigit(ch) && ch != ' ' || i == s.length() - 1){  //判断现在这个是不是符号
                if(sign == '+'){   //判断上一个符号是什么
                    stack.push(num);
                }
                else if(sign == '-'){
                    stack.push(-num);
                }
                else if(sign == '*'){
                    stack.push(stack.pop() * num);
                }
                else if(sign == '/'){
                    stack.push(stack.pop() / num);
                }
                sign = ch;   //把现在这个符号设为上一个符号
                num = 0;  //num设为0，重新计数
            }
        }
        for(Integer i : stack){
            res += i;
        }
        return res;
    }
}
Time: o(n)
Space: o(n)
