public class Solution {
    public int calculate(String s) {
        if(s == null || s.length() == 0) return 0;
        char sign = '+';  //保存上一个符号
        int res = 0;
        int num = 0;
        Stack<Integer> stack = new Stack<>();
        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);
            if(Character.isDigit(ch)){
                num = 10 * num + (ch - '0');
            }
            if(!Character.isDigit(ch) && ch != ' ' || i == s.length() - 1){  //判断现在这个是不是符号，注意一定不能写else if，否则最后一个数字没用
                if(sign == '+'){   //判断上一个符号是什么
                    stack.push(num);
                }
                else if(sign == '-'){
                    stack.push(-num);
                }
                else if(sign == '*'){
                    stack.push(stack.pop() * num);
                }
                else if(sign == '/'){
                    stack.push(stack.pop() / num);
                }
                sign = ch;   //把现在这个符号设为上一个符号
                num = 0;  //num设为0，重新计数
            }
        }
        for(Integer i : stack){
            res += i;
        }
        return res;
    }
}
Time: o(n)
Space: o(n)

public class Solution {
    public int calculate(String s) {
        if(s == null || s.length() == 0){
            return 0;
        }
        s = s.trim().replaceAll(" +", ""); //very important!!!!!!
        int i = 0;
        int res = 0;
        int preVal = 0;
        char sign = '+';
        int val = 0;
        while(i < s.length()){
            int curVal = 0;
            while(i < s.length() && (s.charAt(i) >= '0' && s.charAt(i) <= '9')){
                curVal = 10 * curVal + (s.charAt(i) - '0');
                i++;
            }
            if(sign == '+'){
                res += preVal;
                preVal = curVal;
            }
            else if(sign == '-'){
                res += preVal;
                preVal = -curVal;
            }
            else if(sign == '*'){
                preVal *= curVal;
            }
            else if(sign == '/'){
                preVal /= curVal;
            }
            if(i < s.length()){
                sign = s.charAt(i);
                i++;
            }
        }
        res += preVal;
        return res;
    }
}
