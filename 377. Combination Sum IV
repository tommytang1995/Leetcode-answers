public class Solution {
    public int combinationSum4(int[] nums, int target) {
        int[] res = new int[target + 1];
        res[0] = 1;
        for(int i = 1; i <= target; i++){
            for(int j = 0; j < nums.length; j++){
                if(i >= nums[j]) res[i] += res[i- nums[j]];
            }
        }
        return res[target];
    }
}
public class Solution {
    Map<Integer, Integer> map = new HashMap<>();
    public int combinationSum4(int[] nums, int target) {
        if(nums == null || nums.length == 0 || target < 0) return 0;
        if(target == 0) return 1;
        if(map.containsKey(target)){
            return map.get(target);
        }
        int count = 0;
        for(int num : nums){
                count += combinationSum4(nums, target - num);
        }
        map.put(target, count);
        return count;
    }
}
