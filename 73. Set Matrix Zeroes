public class Solution {
    public void setZeroes(int[][] matrix) {
        boolean fc = false;  //保存第一列的状态
        boolean fr = false;  //保存第一行的状态
        int m = matrix.length;
        int n = matrix[0].length;
//若[i][j]==0，那么就把[i][0]和[0][j]都标记为0.        
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(matrix[i][j] == 0){
                    if(i==0)fr=true;
                    if(j==0)fc=true;
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        
        for(int i = 1; i < m; i++){
            for(int j = 1; j < n; j++){
                if(matrix[i][0] == 0||matrix[0][j] == 0){
                    matrix[i][j] = 0;
                }
            }
        }
        
        if(fc){
            for(int i = 0; i < m; i++){
                matrix[i][0] = 0;
            }
        }
        
        if(fr){
            for(int i = 0; i < n; i++){
                matrix[0][i] = 0;
            }
        }
    }
}

public class Solution {
    public void setZeroes(int[][] matrix) {
        boolean fc = false;
        int m = matrix.length;
        int n = matrix[0].length;
        
        for(int i = 0; i < m; i++){
            if(matrix[i][0] == 0)fc = true;
            for(int j = 1; j < n; j++){
                if(matrix[i][j] == 0){
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        
        for(int i = m-1; i >= 0; i--){   //倒着来是为了防止干扰第一行和第一排的状态
            for(int j = n-1; j >= 1; j--){
                if(matrix[i][0] == 0||matrix[0][j] == 0){
                    matrix[i][j] = 0;
                }
            }
            if(fc)matrix[i][0] = 0;
        }
        
    }
}

Time: o(n*m)
