public class Solution {
    public String reverseWords(String s) {
        if(s == null || s.length() == 0) return "";
        char[] ch = s.toCharArray();
        StringBuilder res = new StringBuilder();
        for(int i = ch.length - 1; i >= 0;){
            while(i >= 0 && ch[i] == ' ') i--;
            if(i < 0) break;
            if(res.length() != 0){
                res.append(" ");
            }
            StringBuilder t = new StringBuilder();
            while(i >= 0 && ch[i] != ' ') t.insert(0, ch[i--]);
            res.append(t.toString());
        }
        return res.toString();
    }
}
--------------------------------------------------------------------------------------
String[] parts = s.trim().split("\\s+");
String out = "";
for (int i = parts.length - 1; i > 0; i--) {
    out += parts[i] + " ";
}
return out + parts[0];
--------------------------------------------------------------------------------------
public class Solution {
    public String reverseWords(String s) {
        if(s == null || s.length() == 0) return "";
        s = s.trim();
        char[] ch = s.toCharArray();
        reverse(ch, 0, ch.length-1);
        int start = 0;
        int end = 0;
        for(int i = 0; i < ch.length; i++){
            if(ch[i] != ' '){
                ch[end++] = ch[i];
            }
            else{
                if(i > 0 && ch[i - 1] != ' '){
                    reverse(ch, start, end-1);
                    ch[end++] = ' ';
                    start = end;
                }
            }
        }
        reverse(ch, start, end-1);
        return new String(ch, 0, end);
    }
    public void reverse(char[] array, int start, int end){
        while(start < end){
            char temp = array[start];
            array[start++] = array[end];
            array[end--] = temp;
        }
    }
}
