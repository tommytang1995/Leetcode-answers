
by Tommy:
public class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        for(int i = 0 ; i < gas.length ; i++){
            int lastRemain = 0;
            int j = i;
            for(; j < i+gas.length ; j++){
                if(gas[j%gas.length]+lastRemain<cost[j%gas.length]){
                    break;
                }
                lastRemain=gas[j%gas.length]+lastRemain-cost[j%gas.length];
            }
            if(j==i+gas.length){
                return i;
            }
        }
        return -1;
    }
}

public class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int sumGas = 0;
        int sumCost = 0;
        int index = 0;
        int left = 0;
        for(int i = 0; i < gas.length; i++){
            sumGas += gas[i];
            sumCost += cost[i];
            left += gas[i] - cost[i];
            if(left < 0){
                index = i + 1;
                left = 0;
            }
        }
        if(sumGas < sumCost) return -1;
        else return index;
    }
}

The reason why I think this works:
1, if sum of gas is more than sum of cost, then there must be a solution. And the question guaranteed that the solution is unique(The first one I found is the right one).
2, The tank should never be negative, so restart whenever there is a negative number.
