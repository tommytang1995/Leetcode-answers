public class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        int[] letter = new int[26];
        for(int i = 0; i < magazine.length(); i++){
            letter[magazine.charAt(i)-'a']++;
        }
        for(int i = 0; i < ransomNote.length(); i++){
            if(letter[ransomNote.charAt(i)-'a'] <= 0){
                return false;
            }
            letter[ransomNote.charAt(i)-'a']--;
        }
        return true;
    }
}
Time: o(n+m)
Space: o(1)

public class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        Map<Character, Integer> map = new HashMap<>();
        for(int i = 0; i < magazine.length(); i++){
            if(!map.containsKey(magazine.charAt(i))){
                map.put(magazine.charAt(i), 1);
            }
            else{
                map.put(magazine.charAt(i), map.get(magazine.charAt(i))+1);
            }
        }
        for(int i = 0; i < ransomNote.length(); i++){
            if(!map.containsKey(ransomNote.charAt(i)) || map.get(ransomNote.charAt(i)) <= 0){
                return false;
            }
            map.put(ransomNote.charAt(i), map.get(ransomNote.charAt(i))-1);
        }
        return true;
    }
}
