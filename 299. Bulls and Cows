public class Solution {
    public String getHint(String secret, String guess) {
        int[] nums = new int[10];
        int bulls = 0;
        int cows = 0;
        for(int i = 0; i < secret.length(); i++){
            int a = secret.charAt(i) - '0';
            int b = guess.charAt(i) - '0';
            if(a == b){
                bulls++;
            }
            else{
                if(nums[a] < 0) cows++;  //consider case 1120 and 0112
                if(nums[b] > 0) cows++;
                nums[a]++; //elements in the secret will increase count
                nums[b]--; //elements in the guess will decrease count
            }
        }
        return bulls + "A" + cows +"B";
    }
}

numbers[secret.charAt(i)-'0'] is negative only if this character appeared in the guess more times then in the secret which means that 
this character in the secret can be matched with one of the previous characters in the guest. I hope this explanation makes sense.

public class Solution {
    public String getHint(String secret, String guess) {
        int[] countS = new int[10];
        int[] countG = new int[10];
        int bull = 0;
        int cow = 0;
        for(int i = 0; i < secret.length(); i++) {
            countS[secret.charAt(i) - '0']++;
            countG[guess.charAt(i) - '0']++;
            if(secret.charAt(i) == guess.charAt(i)) {
                bull++;
                countS[secret.charAt(i) - '0']--;
                countG[guess.charAt(i) - '0']--;
            }
        }
        for(int i = 0; i < 10; i++) {
            cow += (countS[i] > countG[i] ? countG[i] : countS[i]);
        }
        return bull + "A" + cow + "B";
    }
}
