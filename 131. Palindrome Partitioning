public class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> list = new ArrayList<>();
        if(s == null || s.length() == 0) {
            return list;
        }
        helper(s, list, new ArrayList<>(), 0);
        return list;
    }
    
    public void helper(String s, List<List<String>> list, List<String> temp, int index) {
        if(index == s.length()) {
            list.add(new ArrayList<>(temp));
            return;
        }
        for(int i = index; i < s.length(); i++) {
            String str = s.substring(index, i + 1);
            if(valid(str)) {
                temp.add(str);
                helper(s, list, temp, i + 1);
                temp.remove(temp.size() - 1);
            }
        }
    }
    
    public boolean valid(String s) {
        int start = 0;
        int end = s.length() - 1;
        while(start < end) {
            if(s.charAt(start) != s.charAt(end)) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}
