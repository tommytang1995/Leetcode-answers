public class Solution {
    public boolean isIsomorphic(String s, String t) {
        int[] m = new int[512];
        for (int i = 0; i < s.length(); i++) {
            if (m[s.charAt(i)] != m[t.charAt(i)+256]) return false;
            m[s.charAt(i)] = m[t.charAt(i)+256] = i + 1; //why i + 1? example: s="ab", t="aa", if we use i, then we will get a wrong answer
                                                         //because the default value of an element in an array is 0, which means the value 
                                                         //for 'b' is 0 and a is 0 because of the first two 'a's.
        }
        return true;

    }
}

public class Solution {
    public boolean isIsomorphic(String s, String t) {
        Map<Character, Integer> map1 = new HashMap<>();
        Map<Character, Integer> map2 = new HashMap<>();
        for(Integer i = 0; i < s.length(); i++){  //If we use int, then the integers created from ints may not be equal.
            if(map1.put(s.charAt(i), i) != map2.put(t.charAt(i), i)){
                return false;
            }
        }
        return true;
    }
}
