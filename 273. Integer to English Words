class Solution {
    private final String[] LESS_THAN_20 = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven",             "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
    private final String[] TENS = {"", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
    private final String[] THOUSANDS = {"", "Thousand", "Million", "Billion"};
    
    public String numberToWords(int num) {
        if(num == 0) {
            return "Zero"; //记得这个！！！
        }
        StringBuilder sb = new StringBuilder();
        int i = 0;
        while(num > 0) {
            if(num % 1000 != 0) { //记得这个！！！
                sb.insert(0, helper(num % 1000) + THOUSANDS[i] + " ");
            }
            num /= 1000;
            i++;
        }
        return sb.toString().trim();
    }
    
    public String helper(int num) {
        if(num == 0) {
            return "";
        }
        else if(num < 20) {
            return LESS_THAN_20[num] + " ";
        }
        else if(num < 100) {
            return TENS[num / 10] + " " + helper(num % 10); //应该是进入下一个迭代，而不是直接LESS_THAN_20[] + " "，这样有可能造成多余的空格（当num == 90）
        }
        else {
            return LESS_THAN_20[num / 100] + " " + "Hundred" + " " + helper(num % 100);
        }
    }
}
