/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null || head.next == null){
            return head;
        }
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode pre = dummy;
        ListNode cur = head;
        
        while(cur != null){
            while(cur.next != null && cur.val == cur.next.val) cur = cur.next;
            if(pre.next == cur){   //说明没有重复的,pre向前一步
                pre = cur;
            }
            else{    //有重复的，删除中间的重复节点
                pre.next = cur.next;
            }  //不管重没重复都要next
            cur = cur.next;
        }
        
        return dummy.next;
    }
}

Time: o(n)
Space: o(1)
