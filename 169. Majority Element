public class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
        return nums[nums.length/2];
    }
}

Time complexity: quick sort,o(nlogn) 
Space complexity: o(1)

public class Solution {
    public int majorityElement(int[] nums) {
        int res = 0;
        int count = 0;
        for(Integer num : nums){
            if(count == 0){
                res = num;
            }
            else if(num != res){
                count--;
            }
            else{
                count++;
            }
        }
        return res;
    }
}
Time complexity: o(n) 
Space complexity: o(1)

public class Solution {
    public int majorityElement(int[] nums) {
        int res = 0;
        int count = 0;
        for(int i = 0; i < nums.length; i++){
            if(count == 0){
                res = nums[i];
            }
            if(nums[i] == res){
                count++;
            }
            else{
                count--;
            }
        }
        return res;
    }
}
