public class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums==null||nums.length==0)return 0;
        int p = 2;
        for(int i = 2; i < nums.length; i++){
            if(nums[i] > nums[p-2]){ //cannot be nums[i-2]. For example 111223, if you use nums[i-2], the second 2 will not be added.
                nums[p++] = nums[i];
            }
        }
        return p;
    }
}
思路： all of the items before p are all set. That means there are no duplicates that show up more than twice. p points to the last element
of the new array. Say nums[i] = 3, nums[i-2] = 3, it means nums[i-1] = 3 as well. if nums[i-2] = 2, the nums[i-1] = 2 or 3 and either way
it is gonna be good after adding 3 to the new array.

Time: o(n)
