public class Solution {
    public int missingNumber(int[] nums) {
        int sum = nums.length;
        for(int i = 0; i < nums.length; i++){
            sum = sum^i^nums[i];
        }
        return sum;
    }
}
There are n+1 elements and n indexes. There should be n pairs of equal element and index. The left one is missing. Use XOR, we can get
the left one.

public class Solution {
    public int missingNumber(int[] nums) {
        int sum = nums.length;
        for(int i = 0; i < nums.length; i++){
            sum += i;
            sum -= nums[i];
        }
        return sum;
    }
}
To get the missing one, what we need to do is get the result of the sum of 0 to n minus the sum of all the elements in the array. However,
if we do that straightly, it may cause stack overflow.

Time: o(n)
Space: o(1)
