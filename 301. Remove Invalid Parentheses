public class Solution {
    public List<String> removeInvalidParentheses(String s) {
        List<String> list = new ArrayList<>();
        Queue<String> queue = new LinkedList<>();
        Set<String> set = new HashSet<>();
        queue.offer(s);
        set.add(s);
        boolean found = false;
        while(!queue.isEmpty()){
            s = queue.poll();
            if(isValid(s)){
                list.add(s);
                found = true;
            }
            if(found){continue;}
            for(int i = 0; i < s.length(); i++){
                if(s.charAt(i) != '(' && s.charAt(i) != ')')continue;
                String next = s.substring(0,i) + s.substring(i+1);
                if(!set.contains(next)){
                    queue.offer(next);
                    set.add(next);
                }
            }
        }
        return list;
    }
    public boolean isValid(String s){
        int count = 0;
        for(int i = 0; i < s.length(); i++){
            if(s.charAt(i) == '('){
                count++;
            }
            else if(s.charAt(i) == ')'){
                if(count == 0) return false;
                count--;
            }
        }
        return count == 0;
    }
}
