public class Solution {
    private static final String[] keys = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
    public List<String> letterCombinations(String digits) {
        List<String> list = new ArrayList<>();
        if(digits.length()==0)return list; 
        backtrack("",digits,list,0);
        return list;
    }
    public void backtrack(String prefix,String digits,List<String> list,int offset){
        if(prefix.length()==digits.length()){
            list.add(prefix);
            return;
        }
        String letters = keys[digits.charAt(offset)-'0'];
        for(int i = 0 ; i < letters.length() ; i++){
            backtrack(prefix+letters.charAt(i),digits,list,offset+1);
        }
    }
}
