public class Solution {       //第一种方法，循环一次，把三个数的数量分别记下，然后overwrite这个数组。
    public void sortColors(int[] nums) {
        int p1 = 0;
        int p2 = 0;
        int p3 = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i]==0){
                p1++;
            }
            else if(nums[i]==1){
                p2++;
            }
            else{
                p3++;
            }
        }
        for(int i = 0; i < nums.length; i++){
            if(p1-->0){
                nums[i] = 0;
            }
            else if(p2-->0){
                nums[i] = 1;
            }
            else if(p3-->0){
                nums[i] = 2;
            }
        }
    }
}

public class Solution {      //第二种方法，用low表示最后一个0的位置，high表示第一个2的位置，将0和2都扫到两边，中间的就是1了
    public void sortColors(int[] nums) {
        int low = 0;
        int high = nums.length-1;
        for(int i = low; i <= high;){
            if(nums[i] == 0){
                nums[i] = nums[low];
                nums[low] = 0;
                low++;   //前面的都是0，所以向前进
                i++;  //前面的都是0或者1，所以向前进
            }
            else if(nums[i] == 2){
                nums[i] = nums[high];
                nums[high] = 2;
                high--;   //后面的都是2，所以向前进。这里i不+1的原因是，可能调到i位置的正好是0，如果+1了，就错过了。
            }
            else{
                i++;   //如果是1，不用管，往前走。
            }
        }
    }
}

Time: o(n)
Space: o(1)
