public class Solution {
    public int findLongestChain(int[][] pairs) {
        Arrays.sort(pairs, (int[] a, int[] b) -> (a[0] - b[0]));
        int[] dp = new int[pairs.length];
        Arrays.fill(dp, 1);
        int max = Integer.MIN_VALUE;
        for(int i = 0; i < pairs.length; i++){
            for(int j = i - 1; j >= 0; j--){
                if(pairs[j][1] < pairs[i][0]){
                    dp[i] = Math.max(dp[i], dp[j] + 1);
                }
            }
            max = Math.max(max, dp[i]);
        }
        return max;
    }
}

public class Solution {
    public int findLongestChain(int[][] pairs) {
        Arrays.sort(pairs, (int[] a, int[] b) -> (a[1] - b[1]));
        int res = 1;
        int curEnd = pairs[0][1];
        int n = pairs.length;
        for(int i = 1; i < n; i++){
            if(pairs[i][0] > curEnd){
                res++;
                curEnd = pairs[i][1];
            }
        }
        return res;
    }
}
