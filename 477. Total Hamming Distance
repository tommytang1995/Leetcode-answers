public class Solution {
    public int totalHammingDistance(int[] nums) {
        int sum = 0;
        for(int i = 0; i < 32; i++){
            int ones = 0;
            for(int num : nums){
                ones += (num >> i) & 1;
            }
            sum += ones * (nums.length - ones);
        }
        return sum;
    }
}

For each bit position 1-32 in a 32-bit integer, we count the number of integers in the array which have that bit set. Then, if there are n integers in the array and k of them have a particular bit set and (n-k) do not, then that bit contributes k*(n-k) hamming distance to the total.
