Area = min(left, right) * length
if(height[left] < height[right]) and we move the right pointer. Say the next value is smaller than before, then area must be smaller because
the length is smaller as well. If the value is larger than before, then the area still is smaller because the height is still left and 
the length has been smaller. So we have to move the smaller pointer.
The same reason for if(height[right] < height[left])

public class Solution {
    public int maxArea(int[] height) {
        int left = 0, right = height.length - 1;
	int maxArea = 0;

	while (left < right) {
		maxArea = Math.max(maxArea, Math.min(height[left], height[right])
				* (right - left));
		if (height[left] < height[right])
			left++;
		else
			right--;
	}

	return maxArea;
    }
}

Time: o(n) Because when left>=right, all the while loops will stop.
Space: o(1)
