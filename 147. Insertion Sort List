/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode insertionSortList(ListNode head) {
        if(head == null || head.next == null) return head;
        ListNode dummy = new ListNode(0);
        ListNode pre = dummy;  //sorted数组的最后一个节点
        ListNode nex = null;
        ListNode cur = head;
        while(cur != null){
            nex = cur.next; 
            if(pre != dummy && pre.val > cur.val) pre = dummy;  //如451这种情况，当pre=5，cur=1，就必须要把pre推到最前面开始找插入点，如果
                                                                //pre=4，cur=5，这种完全不需要把pre推到最前，会耽误很多时间。
            while(pre.next != null && pre.next.val < cur.val){
                pre = pre.next;
            }
            cur.next = pre.next;
            pre.next = cur;
            cur = nex;
        }
        return dummy.next;
    }
}
Time: o(n)
Space: o(n)
