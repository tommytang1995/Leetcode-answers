public class findKthSmallest {
	
	public static int helper(int[] nums, int k) {
		int start = 0;
		int end = nums.length - 1;
		k--;
		while(start < end) {
			int pivot = partition(nums, start, end);
			if(pivot < k) {
				start = pivot + 1;
			}
			else if(pivot > k) {
				end = pivot - 1;
			}
			else {
				return nums[pivot];
			}
		}
		return nums[start];
	}

	public static int partition(int[] nums, int start, int end) {
		int pivot = start;
		int temp;
		while(start <= end) {
			while(start <= end && nums[start] <= nums[pivot]) {start++;}
			while(start <= end && nums[end] > nums[pivot]) {end--;}
			if(start > end) {
				break;
			}
			temp = nums[start];
			nums[start] = nums[end];
			nums[end] = temp;
		}
		temp = nums[end];
		nums[end] = nums[pivot];
		nums[pivot] = temp;
		return end;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] nums = {7, 3, 4, 6, 2, 5, 8};
		System.out.println(helper(nums, 3));
	}

}
