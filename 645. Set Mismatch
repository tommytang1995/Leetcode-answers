public class Solution {
    public int[] findErrorNums(int[] nums) {
        Set<Integer> set = new HashSet<>();
        int n = nums.length;
        long sum = (n * (n + 1)) / 2;
        int duplicate = 0;
        for(int num : nums){
            if(!set.add(num)) duplicate = num;
            sum -= num;
        }
        return new int[]{duplicate, (int)sum + duplicate};
    }
}

public class Solution {
    public int[] findErrorNums(int[] nums) {
        int[] res = new int[2];
        for(int num : nums){
            if(nums[Math.abs(num) - 1] < 0) res[0] = Math.abs(num);
            else nums[Math.abs(num) - 1] *= -1;
        }
        for(int i = 0; i < nums.length; i++){
            if(nums[i] > 0) res[1] = i + 1;
        }
        return res;
    }
}
